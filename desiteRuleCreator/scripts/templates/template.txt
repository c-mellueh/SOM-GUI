
var id = desiteThis.ID()
var isContainer = desiteAPI.getPropertyValue(id,'cpIsContainer','xs:boolean');
var isComposite = desiteAPI.getPropertyValue(id,'cpIsComposite','xs:boolean');

{%for pset in psets -%}

{% set pset = objekt.get_property_set(pset.name) %}
var ident_pset = '{{ident_pset}}:'
var pSet = '{{pset.name}}:' ;
var type = 'IfcBuildingElementProxy'; {#Parametrisieren #}
var objectName = desiteAPI.getPropertyValue(id,"ifcTypeObjectName","xs:string")
var ident = '{{ident}}';
var otyp= ['{{objekt.name}}'];	{# Mehrfachnennungen zulassen #}
var valueIfcType = desiteAPI.getPropertyValue(id,'ifcType','xs:string');
var otyp_vorhanden = desiteAPI.getPropertyValue(id, ident_pset+ident, 'xs:string');

if (isContainer == true && isComposite == false) {
	desiteResult.setCheckState('ignored');
    desiteResult.addMessage('Container was ignored.');
}else if (otyp.indexOf(otyp_vorhanden)!=-1) {

        var checkfailed = 0;
        var Anzahl =0;
        {%-for property in pset.get_all_properties()%}


        Anzahl+=1;
        name= '{{property.name}}';
	    return_format= "{{property.datentyp}}";
	    {%if property.art == "Wert"%}
	    var list = [
	    {%-for wert in property.wert%}
	    {%-if not loop.index==1%} ,'{{wert}}'
        {%-else-%}
        '{{wert}}'
	    {%-endif-%}
	    {%-endfor%}]
        {%if property.wert ==[]-%}
        checkfailed +=check_exist(name,pSet,return_format);
        {%else%}
        checkfailed +=check_list(name,pSet,return_format,list);
        {%-endif-%}
	    {%-elif property.art == "Bereich" -%}
	    range = {{property.wert}};
	    checkfailed+=check_range(name,pSet,return_format,range);
	    {%-elif property.art == "Format"%}
	    format = [
	    {%-for wert in property.wert-%}
	    {%-if not loop.index==1-%} ,'{{wert.replace('\\','\\\\')}}'
        {%-else-%}
        '{{wert.replace('\\','\\\\')}}'
	    {%-endif-%}
	    {%-endfor-%}]
        checkfailed +=check_format(name,pSet,return_format,format);
        {%-endif-%}
	    {%-endfor%}


        var check_status = "Undefined"
        if (checkfailed == 0) {
            desiteResult.setCheckState('passed'); check_status = "Passed"
        }


    if (Anzahl == checkfailed) {
        desiteResult.setCheckState('failed');
        check_status = "Failed"
        desiteResult.addMessage('Keine der geforderten Eigenschaften vorhanden!');
    }

    if (checkfailed < Anzahl && checkfailed != 0) {
        desiteResult.setCheckState('warning');
        check_status = "Warning";
    }

    desiteAPI.setPropertyValue( id , "Check_State" , "xs:string", check_status);
    desiteAPI.setPropertyValue(id, "zu_pruefende_eigenschaften","xs:int",Anzahl);
    desiteAPI.setPropertyValue(id, "fehlerhafte_eigenschaften","xs:int",checkfailed);

}
else {
    desiteResult.setCheckState('ignored');
    }
{% endfor %}
